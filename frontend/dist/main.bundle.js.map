{"version":3,"sources":["C:/xampp/htdocs/project/frontend/src/$_gendir lazy","C:/xampp/htdocs/project/frontend/src/app/app.component.css","C:/xampp/htdocs/project/frontend/src/app/app.component.html","C:/xampp/htdocs/project/frontend/src/app/app.component.ts","C:/xampp/htdocs/project/frontend/src/app/app.module.ts","C:/xampp/htdocs/project/frontend/src/app/student.service.ts","C:/xampp/htdocs/project/frontend/src/app/students/students.component.css","C:/xampp/htdocs/project/frontend/src/app/students/students.component.html","C:/xampp/htdocs/project/frontend/src/app/students/students.component.ts","C:/xampp/htdocs/project/frontend/src/app/update-student/update-student.component.css","C:/xampp/htdocs/project/frontend/src/app/update-student/update-student.component.html","C:/xampp/htdocs/project/frontend/src/app/update-student/update-student.component.ts","C:/xampp/htdocs/project/frontend/src/environments/environment.ts","C:/xampp/htdocs/project/frontend/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,uH;;;;;;;;;;;;;;;;ACA0C;AAQ1C,IAAa,YAAY;IANzB;QAOE,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAAD,mBAAC;AAAD,CAAC;AAFY,YAAY;IANxB,wEAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,0EAAmC;QACnC,yEAAkC;KAEnC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACqC;AAC4D;AACvB;AACxE;AACI;AACmB;AACA;AACiB;AACpC;AAuC/C,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IArCrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;YACZ,uFAAiB;YACjB,wGAAsB;SACvB;QACD,OAAO,EAAE;YACP,iEAAU;YACV,gFAAa;YACb,qGAAuB;YACvB,wEAAa;YACb,wEAAa;YACb,0EAAe;YACf,2EAAgB;YAChB,wEAAa;YACb,wEAAa;YACb,yEAAc;YACd,6EAAkB;YAClB,yEAAc;YACd,mEAAW;YACX,2EAAmB;YACnB,4EAAiB;YACjB,0EAAe;YACf,qEAAY,CAAC,OAAO,CAAC;gBACnB;oBACE,IAAI,EAAE,EAAE;oBACR,SAAS,EAAE,uFAAiB;iBAC7B;gBACD;oBACE,IAAI,EAAE,mBAAmB;oBACzB,SAAS,EAAE,wGAAsB;iBAClC;aACF,CAAC;SACH;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;ACjDqB;AACG;AAEb;AAG/B,IAAa,cAAc;IAE3B,wBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IACjC,sBAAsB;IACtB,oCAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC;aACjC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IAED,uBAAuB;IACvB,sCAAa,GAAb,UAAc,EAAE;QACd,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,EAAE,CAAC;aACtC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IAED,cAAc;IAChB,mCAAU,GAAV,UAAW,UAAU;QACjB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aACnE,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC9B,CAAC;IAED,iBAAiB;IACjB,sCAAa,GAAb,UAAc,EAAE;QACZ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,GAAG,EAAE,CAAC;aACzC,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC9B,CAAC;IAED,iBAAiB;IACf,sCAAa,GAAb,UAAc,EAAE,EAAE,IAAI;QACtB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,EAAE,EAAE,IAAI,EAAC,EAAE,CAAC;aAC/C,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC1B,CAAC;IACL,qBAAC;AAAD,CAAC;AAlCc,cAAc;IAD1B,yEAAU,EAAE;yDAGa,2DAAI,oBAAJ,2DAAI;GAFjB,cAAc,CAkC5B;AAlC4B;;;;;;;;;ACN7B;AACA;;;AAGA;AACA,yCAA0C,qBAAqB,iBAAiB,mBAAmB,kBAAkB,uBAAuB,2BAA2B,2BAA2B,oBAAoB,mCAAmC,oCAAoC,qCAAqC,qCAAqC,KAAK,WAAW,0BAA0B,wBAAwB,0BAA0B,qBAAqB,KAAK,6BAA6B,kBAAkB,KAAK,mBAAmB,4BAA4B,6BAA6B,SAAS,wBAAwB,oBAAoB,SAAS,+BAA+B,4BAA4B,qBAAqB,qCAAqC,uBAAuB,0CAA0C,SAAS,gBAAgB,uBAAuB,mBAAmB,mBAAmB,kBAAkB,uBAAuB,sBAAsB,iCAAiC,WAAW,UAAU,uBAAuB,4BAA4B,SAAS,SAAS,qBAAqB,yBAAyB,KAAK,OAAO,yBAAyB,KAAK;;AAEzrC;;;AAGA;AACA,2C;;;;;;;ACXA,0tHAA0tH,iBAAiB,0BAA0B,iBAAiB,uBAAuB,cAAc,uBAAuB,eAAe,uBAAuB,eAAe,me;;;;;;;;;;;;;;;;;;;;;ACAr1H;AACE;AAEN;AAQ9C,IAAa,iBAAiB;IAE5B,2BAAmB,QAAqB,EAAU,cAA8B;QAA7D,aAAQ,GAAR,QAAQ,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;IAAK,CAAC;IAkBtF,sCAAU,GAAV;QAAA,iBAkBC;QAjBC,IAAM,UAAU,GAAG;YACjB,OAAO,EAAE,IAAI,CAAC,OAAO;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,KAAK,EAAE,IAAI,CAAC,KAAK;YACf,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,aAAa,EAAE,IAAI,CAAC,aAAa;SAClC;QACD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC;aACvC,SAAS,CAAC,iBAAO,IAAK,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAC,CAAC,CAAC;QACvD,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE;aAC9B,SAAS,CAAE,kBAAQ,IAAI,YAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC,CAAC;IACtD,CAAC;IAKH,yCAAa,GAAb,UAAc,EAAO;QACnB,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,CAAC;aAClC,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAG,CAAC,EAAE,EAAE,CAAC;oBAC1C,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;wBAC1B,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACxB,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAGC,oCAAQ,GAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE;aAC9B,SAAS,CAAE,kBAAQ,IAAI,YAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC,CAAC;IACtD,CAAC;IAGD,wCAAY,GAAZ,UAAa,OAAe,EAAE,MAAc;QAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,4BAA4B,EAAE,IAAI,EAAE;YACrD,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IACH,wBAAC;AAAD,CAAC;AArEY,iBAAiB;IAN7B,wEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,wFAAwC;QACxC,uFAAuC;QACvC,SAAS,EAAE,CAAC,wEAAc,CAAC;KAC5B,CAAC;yDAG6B,sEAAW,oBAAX,sEAAW,sDAA0B,wEAAc,oBAAd,wEAAc;GAFrE,iBAAiB,CAqE7B;AArE6B;;;;;;;;;ACX9B;AACA;;;AAGA;AACA,yCAA0C,qBAAqB,iBAAiB,mBAAmB,kBAAkB,uBAAuB,2BAA2B,2BAA2B,oBAAoB,mCAAmC,oCAAoC,qCAAqC,qCAAqC,KAAK,WAAW,0BAA0B,wBAAwB,0BAA0B,qBAAqB,KAAK,6BAA6B,kBAAkB,KAAK;;AAEjhB;;;AAGA;AACA,2C;;;;;;;ACXA,s0H;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACE;AAKN;AAET;AAQrC,IAAa,sBAAsB;IAIjC,gCAAmB,QAAqB,EAAU,cAA8B;QAA7D,aAAQ,GAAR,QAAQ,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAEhF,aAAQ,GAAG,EAAE,CAAC;IAFsE,CAAC;IAgBrF,8CAAa,GAAb,UAAc,EAAE;QACd,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC;aAEvD,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAG,CAAC,EAAE,EAAE,CAAC;oBAC1C,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;wBAC1B,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACtB,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAE,IAAI,CAAC,GAAG,CAAC;aACzC,SAAS,CAAE,kBAAQ,IAAI,YAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC,CAAC;IACtD,CAAC;IACD,6CAAY,GAAZ,UAAa,OAAe,EAAE,MAAc;QAC1C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,8BAA8B,EAAE,IAAI,EAAE;YACvD,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC;IACL,CAAC;IACH,6BAAC;AAAD,CAAC;AA5CY,sBAAsB;IANlC,wEAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,oGAA8C;QAC9C,mGAA6C;QAC7C,SAAS,EAAE,CAAC,wEAAc,CAAC;KAC5B,CAAC;yDAK6B,sEAAW,oBAAX,sEAAW,sDAA0B,wEAAc,oBAAd,wEAAc;GAJrE,sBAAsB,CA4ClC;AA5CkC;;;;;;;;;;AChBnC;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/project/frontend/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/project/frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--<app-students></app-students>-->\\r\\n\\r\\n<div>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/project/frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/project/frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { MatListModule, MatTableModule, MatFormFieldModule, MatInputModule, MatSnackBarModule, MatSelectModule } from '@angular/material';\r\nimport { MatMenuModule, MatIconModule, MatButtonModule, MatToolbarModule, MatTabsModule } from '@angular/material';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppComponent } from './app.component';\r\nimport { StudentsComponent } from './students/students.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UpdateStudentComponent } from './update-student/update-student.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    StudentsComponent,\r\n    UpdateStudentComponent,\r\n  ],\r\n  imports: [\r\n    HttpModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatTabsModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSnackBarModule,\r\n    MatSelectModule,\r\n    RouterModule.forRoot([\r\n      {\r\n        path: '',\r\n        component: StudentsComponent\r\n      },\r\n      {\r\n        path: 'updateStudent/:id',\r\n        component: UpdateStudentComponent\r\n      },\r\n    ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/project/frontend/src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\n  import { Student } from './student';\r\n  import 'rxjs/add/operator/map';\r\n\r\n  @Injectable()\r\n  export class StudentService {\r\n\r\n  constructor(private http: Http) { }\r\n    // retrieving students\r\n    getStudents() {\r\n      return this.http.get('api/students')\r\n        .map(res => res.json());\r\n    }\r\n\r\n    // retrieve one student\r\n    getOneStudent(id) {\r\n      return this.http.get('api/student/' + id)\r\n        .map(res => res.json());\r\n    }\r\n\r\n    // add student\r\n  addStudent(newStudent) {\r\n      var headers = new Headers();\r\n      headers.append('Content-Type', 'application/json');\r\n      return this.http.post('api/student', newStudent, { headers: headers })\r\n        .map(res => res.json());\r\n  }\r\n\r\n  // delete student\r\n  deleteStudent(id) {\r\n      return this.http.delete('api/student/' + id)\r\n        .map(res => res.json());\r\n  }\r\n\r\n  // update student\r\n    updateStudent(id, body) {\r\n    return this.http.put('api/student/' + id, body,'')\r\n      .map(res => res.json());\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/project/frontend/src/app/student.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form-container{\\r\\n  display: block;\\r\\n  width: 90%;\\r\\n  padding: 2em;\\r\\n  margin: 2em;\\r\\n  background: #fff;\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-box-direction: normal;\\r\\n      -ms-flex-direction: column;\\r\\n          flex-direction: column;\\r\\n}\\r\\n\\r\\nh1{\\r\\n  margin-bottom: 2rem;\\r\\n  font-weight: bold;\\r\\n  font-family: 'Muli';\\r\\n  font-size: 2em;\\r\\n}\\r\\n\\r\\n.form-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*.matlist{*/\\r\\n  /*margin-left: 10px;*/\\r\\n  /*word-spacing: 30px;*/\\r\\n/*}*/\\r\\n\\r\\n/*.buttonlist{*/\\r\\n/*margin: 5px;*/\\r\\n/*}*/\\r\\n\\r\\n\\r\\n/*.matlistdesign{*/\\r\\n  /*background: white;*/\\r\\n  /*width: 90%;*/\\r\\n  /*margin: 10px auto 0px auto;*/\\r\\n  /*padding: 1em;*/\\r\\n  /*box-shadow: 1px 1px 0 lightgrey;*/\\r\\n/*}*/\\r\\n\\r\\ntable{\\r\\n  /*display: block;*/\\r\\n  width: 90%;\\r\\n  padding: 2em;\\r\\n  margin: 2em;\\r\\n  background: #fff;\\r\\n  /*display: flex;*/\\r\\n  /*flex-direction: column;*/\\r\\n\\r\\n}\\r\\n/*.th{*/\\r\\n  /*margin: 20px;*/\\r\\n  /*border: 2px black;*/\\r\\n/*}*/\\r\\nth{\\r\\n  color: #ffffff;\\r\\n  text-align: center;\\r\\n}\\r\\ntd{\\r\\n  text-align: center;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/project/frontend/src/app/students/students.component.css\n// module id = ../../../../../src/app/students/students.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <span> School Information System</span>\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n    <mat-icon>more_vert</mat-icon>\\r\\n  </button>\\r\\n  <mat-menu #menu=\\\"matMenu\\\">\\r\\n    <button mat-menu-item disabled>\\r\\n      <mat-icon><i class=\\\"material-icons\\\">perm_identity</i></mat-icon>\\r\\n      <span>Profile</span>\\r\\n    </button>\\r\\n    <button mat-menu-item disabled>\\r\\n      <mat-icon>notifications_off</mat-icon>\\r\\n      <span>Notifications</span>\\r\\n    </button>\\r\\n    <button mat-menu-item disabled>\\r\\n      <mat-icon>fingerprint</mat-icon>\\r\\n      <span>Login</span>\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n</mat-toolbar>\\r\\n\\r\\n<mat-tab-group>\\r\\n  <mat-tab label=\\\"Create New Student\\\">\\r\\n<form (ngSubmit)=\\\"addStudent()\\\" name=\\\"studentForm\\\">\\r\\n<div class=\\\"form-container\\\">\\r\\n  <h1> Create New Student Resource</h1>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" placeholder=\\\"Surname\\\" [(ngModel)]=\\\"surname\\\" name=\\\"surname\\\" required>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" required>\\r\\n    </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" required>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Address\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\" required>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput type=\\\"number\\\" placeholder=\\\"Phone\\\" [(ngModel)]=\\\"phone\\\" name=\\\"phone\\\" >\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-select placeholder=\\\"Gender\\\" [(ngModel)]=\\\"gender\\\" name=\\\"gender\\\" required>\\r\\n      <mat-option value=\\\"Male\\\">Male </mat-option>\\r\\n      <mat-option value=\\\"Female\\\">Female </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput type=\\\"number\\\" placeholder=\\\"Age\\\" [(ngModel)]=\\\"age\\\" name=\\\"age\\\" required>\\r\\n  </mat-form-field>\\r\\n\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Department\\\" [(ngModel)]=\\\"department\\\" name=\\\"department\\\" required>\\r\\n  </mat-form-field>\\r\\n\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Course\\\" [(ngModel)]=\\\"course\\\" name=\\\"course\\\" required>\\r\\n  </mat-form-field>\\r\\n\\r\\n\\r\\n  <mat-form-field>\\r\\n    <mat-select placeholder=\\\"Level\\\" [(ngModel)]=\\\"level\\\" name=\\\"level\\\" required>\\r\\n      <mat-option value=\\\"100\\\">100</mat-option>\\r\\n      <mat-option value=\\\"200\\\">200</mat-option>\\r\\n      <mat-option value=\\\"300\\\">300</mat-option>\\r\\n      <mat-option value=\\\"400\\\">400</mat-option>\\r\\n      <mat-option value=\\\"500\\\">500</mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput type=\\\"number\\\" placeholder=\\\"Year Enrolled\\\" [(ngModel)]=\\\"year_enrolled\\\" name=\\\"year_enrolled\\\" required>\\r\\n  </mat-form-field>\\r\\n\\r\\n\\r\\n  <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"openSnackBar()\\\">Create</button>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab label=\\\"View Students\\\">\\r\\n\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n      <thead class=\\\"bg-primary\\\">\\r\\n      <tr>\\r\\n        <!--<th scope=\\\"col\\\">#</th>-->\\r\\n        <th scope=\\\"col\\\">Surname</th>\\r\\n        <th scope=\\\"col\\\">Name</th>\\r\\n        <th scope=\\\"col\\\">Email</th>\\r\\n        <th scope=\\\"col\\\">Phone No</th>\\r\\n        <th scope=\\\"col\\\">Actions</th>\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let student of students\\\">\\r\\n        <!--<th scope=\\\"row\\\">{{student.surname}}</th>-->\\r\\n        <td>{{student.surname}}</td>\\r\\n        <td>{{student.name}}</td>\\r\\n        <td>{{student.email}}</td>\\r\\n        <td>{{student.phone}}</td>\\r\\n        <td><button mat-raised-button class=\\\"buttonlist\\\" [routerLink] = \\\"['/updateStudent', student._id]\\\"><i class=\\\"material-icons\\\" >remove_red_eye</i></button>\\r\\n          <button mat-raised-button class=\\\"buttonlist\\\" color=\\\"warn\\\" (click)=\\\"deleteStudent(student._id)\\\"><i class=\\\"material-icons\\\" >delete</i></button></td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    <!--<div>-->\\r\\n    <!--</div>-->\\r\\n   </mat-tab>\\r\\n  </mat-tab-group>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/project/frontend/src/app/students/students.component.html\n// module id = ../../../../../src/app/students/students.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from '../student.service';\r\nimport { Student } from '../student';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-students',\r\n  templateUrl: './students.component.html',\r\n  styleUrls: ['./students.component.css'],\r\n  providers: [StudentService]\r\n})\r\nexport class StudentsComponent implements OnInit {\r\n\r\n  constructor(public snackBar: MatSnackBar, private studentService: StudentService) {  }\r\n\r\n  students: Student[];\r\n  student: Student;\r\n  surname: string;\r\n  name: string;\r\n  age: number;\r\n  email: string ;\r\n  address: string;\r\n  gender: string;\r\n  phone: string;\r\n  department: string;\r\n  course: string;\r\n  level: string;\r\n  year_enrolled: string;\r\n\r\n\r\n\r\n  addStudent(){\r\n    const newStudent = {\r\n      surname: this.surname,\r\n    name: this.name,\r\n    age: this.age,\r\n    email: this.email,\r\n    address: this.address,\r\n    gender: this.gender,\r\n    phone: this.phone,\r\n      department: this.department,\r\n      course: this.course,\r\n      level: this.level,\r\n      year_enrolled: this.year_enrolled\r\n    }\r\n    this.studentService.addStudent(newStudent)\r\n      .subscribe(student => {this.students.push(student)});\r\n    this.studentService.getStudents()\r\n      .subscribe( students => this.students = students);\r\n  }\r\n\r\n\r\n\r\n\r\ndeleteStudent(id: any) {\r\n  const students = this.students;\r\n  this.studentService.deleteStudent(id)\r\n    .subscribe(data => {\r\n      if (data.n == 1) {\r\n        for (let i = 0; i < students.length;  i++) {\r\n          if (students[i]._id == id) {\r\n            students.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n    });\r\n}\r\n\r\n\r\n  ngOnInit() {\r\n    this.studentService.getStudents()\r\n      .subscribe( students => this.students = students);\r\n  }\r\n\r\n\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open('Student Added Successfully', 'OK', {\r\n      duration: 4000,\r\n    });\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/project/frontend/src/app/students/students.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".form-container{\\r\\n  display: block;\\r\\n  width: 90%;\\r\\n  padding: 2em;\\r\\n  margin: 2em;\\r\\n  background: #fff;\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-box-direction: normal;\\r\\n      -ms-flex-direction: column;\\r\\n          flex-direction: column;\\r\\n}\\r\\n\\r\\nh1{\\r\\n  margin-bottom: 2rem;\\r\\n  font-weight: bold;\\r\\n  font-family: 'Muli';\\r\\n  font-size: 2em;\\r\\n}\\r\\n\\r\\n.form-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/project/frontend/src/app/update-student/update-student.component.css\n// module id = ../../../../../src/app/update-student/update-student.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <span> School Information System</span>\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n\\r\\n  <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n    <mat-icon>more_vert</mat-icon>\\r\\n  </button>\\r\\n  <mat-menu #menu=\\\"matMenu\\\">\\r\\n    <button mat-menu-item disabled>\\r\\n      <mat-icon><i class=\\\"material-icons\\\">perm_identity</i></mat-icon>\\r\\n      <span>Profile</span>\\r\\n    </button>\\r\\n    <button mat-menu-item disabled>\\r\\n      <mat-icon>notifications_off</mat-icon>\\r\\n      <span>Notifications</span>\\r\\n    </button>\\r\\n    <button mat-menu-item disabled>\\r\\n      <mat-icon>fingerprint</mat-icon>\\r\\n      <span>Login</span>\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n</mat-toolbar>\\r\\n\\r\\n\\r\\n<mat-tab-group >\\r\\n<mat-tab label=\\\"Update Student\\\" >\\r\\n<form  (ngSubmit)=\\\"updateStudent(students._id)\\\" name=\\\"studentForm\\\">\\r\\n  <div class=\\\"form-container\\\">\\r\\n    <h1> Update Student</h1>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" placeholder=\\\"Surname\\\" [(ngModel)]=\\\"students.surname\\\" name=\\\"surname\\\" required>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"students.name\\\" name=\\\"name\\\" required>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"students.email\\\" name=\\\"email\\\" required>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" placeholder=\\\"Address\\\" [(ngModel)]=\\\"students.address\\\" name=\\\"address\\\" required>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"number\\\" placeholder=\\\"Phone\\\" [(ngModel)]=\\\"students.phone\\\" name=\\\"phone\\\" >\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" placeholder=\\\"Gender\\\" [(ngModel)]=\\\"students.gender\\\" name=\\\"gender\\\" required>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <!--<mat-form-field>-->\\r\\n      <!--<mat-select placeholder=\\\"Gender\\\" [(ngModel)]=\\\"student.gender\\\" name=\\\"gender\\\" required>-->\\r\\n        <!--<mat-option value=\\\"Male\\\">Male </mat-option>-->\\r\\n        <!--<mat-option value=\\\"Female\\\">Female </mat-option>-->\\r\\n      <!--</mat-select>-->\\r\\n    <!--</mat-form-field>-->\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"number\\\" placeholder=\\\"Age\\\" [(ngModel)]=\\\"students.age\\\" name=\\\"age\\\" required>\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" placeholder=\\\"Department\\\" [(ngModel)]=\\\"students.department\\\" name=\\\"department\\\" required>\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" placeholder=\\\"Course\\\" [(ngModel)]=\\\"students.course\\\" name=\\\"course\\\" required>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" placeholder=\\\"Level\\\" [(ngModel)]=\\\"students.level\\\" name=\\\"level\\\" required>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <!--<mat-form-field>-->\\r\\n      <!--<mat-select placeholder=\\\"Level\\\" [(ngModel)]=\\\"student.level\\\" name=\\\"level\\\" required>-->\\r\\n        <!--<mat-option value=\\\"100\\\">100</mat-option>-->\\r\\n        <!--<mat-option value=\\\"200\\\">200</mat-option>-->\\r\\n        <!--<mat-option value=\\\"300\\\">300</mat-option>-->\\r\\n        <!--<mat-option value=\\\"400\\\">400</mat-option>-->\\r\\n        <!--<mat-option value=\\\"500\\\">500</mat-option>-->\\r\\n      <!--</mat-select>-->\\r\\n    <!--</mat-form-field>-->\\r\\n\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"number\\\" placeholder=\\\"Year Enrolled\\\" [(ngModel)]=\\\"students.year_enrolled\\\" name=\\\"year_enrolled\\\" required>\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"openSnackBar()\\\">Update</button>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n</mat-tab>\\r\\n</mat-tab-group>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/xampp/htdocs/project/frontend/src/app/update-student/update-student.component.html\n// module id = ../../../../../src/app/update-student/update-student.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from '../student.service';\r\nimport { Student } from '../student';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { Http, Headers } from '@angular/http';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Component({\r\n  selector: 'app-update-student',\r\n  templateUrl: './update-student.component.html',\r\n  styleUrls: ['./update-student.component.css'],\r\n  providers: [StudentService]\r\n})\r\nexport class UpdateStudentComponent implements OnInit {\r\n\r\n\r\n\r\n  constructor(public snackBar: MatSnackBar, private studentService: StudentService) { }\r\n  student: Student;\r\n  students = [];\r\n  _id: string;\r\n  surname: string;\r\n  name: string;\r\n  age: number;\r\n  email: string ;\r\n  address: string;\r\n  gender: string;\r\n  phone: string;\r\n  department: string;\r\n  course: string;\r\n  level: string;\r\n  year_enrolled: string;\r\n\r\n  updateStudent(id) {\r\n    const students = this.students;\r\n    this.studentService.updateStudent(this._id, this.students)\r\n      // .subscribe(students => {this.students.concat(students)});\r\n      .subscribe(data => {\r\n        if (data.n == 1) {\r\n          for (let i = 0; i < students.length;  i++) {\r\n            if (students[i]._id == id) {\r\n              students.push(i, 1);\r\n            }\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.studentService.getOneStudent( this._id)\r\n      .subscribe( students => this.students = students);\r\n  }\r\n  openSnackBar(message: string, action: string) {\r\n    this.snackBar.open('Student Updated Successfully', 'OK', {\r\n      duration: 4000,\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/project/frontend/src/app/update-student/update-student.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/project/frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/xampp/htdocs/project/frontend/src/main.ts"],"sourceRoot":"webpack:///"}